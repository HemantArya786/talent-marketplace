import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
// The exported code uses Tailwind CSS. Install Tailwind CSS in your dev environment to ensure all styles work.
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { Checkbox } from "@/components/ui/checkbox";
import { Collapsible, CollapsibleContent, CollapsibleTrigger, } from "@/components/ui/collapsible";
const JobApplyPage = () => {
    const [isJobDetailsOpen, setIsJobDetailsOpen] = useState(false);
    const [isSubmitting, setIsSubmitting] = useState(false);
    const [formData, setFormData] = useState({
        fullName: "",
        email: "",
        phone: "",
        location: "",
        linkedinUrl: "",
        portfolioUrl: "",
        yearsExperience: "",
        coverLetter: "",
        reactNodeExperience: "",
        largestProject: "",
        whyInterested: "",
        termsAccepted: false,
    });
    const [dragActive, setDragActive] = useState(false);
    const [uploadedFile, setUploadedFile] = useState(null);
    const handleInputChange = (field, value) => {
        setFormData((prev) => ({
            ...prev,
            [field]: value,
        }));
    };
    const handleDrag = (e) => {
        e.preventDefault();
        e.stopPropagation();
        if (e.type === "dragenter" || e.type === "dragover") {
            setDragActive(true);
        }
        else if (e.type === "dragleave") {
            setDragActive(false);
        }
    };
    const handleDrop = (e) => {
        e.preventDefault();
        e.stopPropagation();
        setDragActive(false);
        if (e.dataTransfer.files && e.dataTransfer.files[0]) {
            const file = e.dataTransfer.files[0];
            if (file.type === "application/pdf" || file.name.endsWith(".pdf")) {
                setUploadedFile(file);
            }
        }
    };
    const handleFileUpload = (e) => {
        if (e.target.files && e.target.files[0]) {
            const file = e.target.files[0];
            if (file.type === "application/pdf" || file.name.endsWith(".pdf")) {
                setUploadedFile(file);
            }
        }
    };
    const handleSubmit = async (e) => {
        e.preventDefault();
        setIsSubmitting(true);
        // Simulate form submission
        await new Promise((resolve) => setTimeout(resolve, 2000));
        setIsSubmitting(false);
        alert("Application submitted successfully!");
    };
    const coverLetterCount = formData.coverLetter.length;
    const maxCoverLetterLength = 2000;
    return (_jsx("div", { className: "min-h-screen bg-gray-50", children: _jsxs("div", { className: "w-full max-w-4xl mx-auto", children: [_jsx("header", { className: "sticky top-0 z-50 bg-white border-b border-gray-200 shadow-sm", children: _jsxs("div", { className: "px-6 py-4", children: [_jsxs("div", { className: "flex items-center space-x-4", children: [_jsx("a", { href: "https://readdy.ai/home/466648b8-c495-41c8-965f-d0b9f457ee7c/43f0dfc8-6c02-4500-83ea-5f7a0d08685a", "data-readdy": "true", className: "cursor-pointer", children: _jsxs(Button, { variant: "outline", size: "sm", className: "!rounded-button whitespace-nowrap cursor-pointer", children: [_jsx("i", { className: "fas fa-arrow-left mr-2" }), "Back to Jobs"] }) }), _jsxs("div", { className: "flex-1", children: [_jsx("h1", { className: "text-2xl font-bold text-gray-900", children: "Senior Full Stack Developer" }), _jsx("p", { className: "text-lg text-gray-600", children: "TechCorp Solutions" })] })] }), _jsxs("div", { className: "flex flex-wrap gap-2 mt-4", children: [_jsxs(Badge, { className: "bg-green-100 text-green-800 border-green-200", children: [_jsx("i", { className: "fas fa-dollar-sign mr-1" }), "$5,000 - $8,000"] }), _jsxs(Badge, { variant: "outline", className: "border-gray-300 text-gray-700", children: [_jsx("i", { className: "fas fa-map-marker-alt mr-1" }), "Remote"] }), _jsxs(Badge, { variant: "outline", className: "border-gray-300 text-gray-700", children: [_jsx("i", { className: "fas fa-clock mr-1" }), "Full-time"] }), _jsxs(Badge, { variant: "outline", className: "border-gray-300 text-gray-700", children: [_jsx("i", { className: "fas fa-briefcase mr-1" }), "Senior Level"] })] })] }) }), _jsxs("main", { className: "px-6 py-8", children: [_jsx(Card, { className: "mb-8 bg-white border-gray-200", children: _jsxs(Collapsible, { open: isJobDetailsOpen, onOpenChange: setIsJobDetailsOpen, children: [_jsx(CollapsibleTrigger, { asChild: true, children: _jsx(CardHeader, { className: "cursor-pointer hover:bg-gray-50 transition-colors", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs(CardTitle, { className: "text-xl font-bold text-gray-900", children: [_jsx("i", { className: "fas fa-info-circle mr-2 text-blue-600" }), "Job Details"] }), _jsx("i", { className: `fas fa-chevron-${isJobDetailsOpen ? "up" : "down"} text-gray-500` })] }) }) }), _jsx(CollapsibleContent, { children: _jsx(CardContent, { className: "pt-0", children: _jsxs("div", { className: "space-y-6", children: [_jsxs("div", { children: [_jsx("h3", { className: "font-semibold text-gray-900 mb-2", children: "Job Description" }), _jsx("p", { className: "text-gray-600 leading-relaxed", children: "We are looking for an experienced full stack developer to join our dynamic team. You will be responsible for developing scalable web applications using modern technologies and frameworks. The ideal candidate will have strong experience with React, Node.js, and TypeScript, along with a passion for creating exceptional user experiences." })] }), _jsxs("div", { children: [_jsx("h3", { className: "font-semibold text-gray-900 mb-2", children: "Required Skills" }), _jsx("div", { className: "flex flex-wrap gap-2", children: [
                                                                    "React",
                                                                    "Node.js",
                                                                    "TypeScript",
                                                                    "MongoDB",
                                                                    "Express.js",
                                                                    "REST APIs",
                                                                    "Git",
                                                                    "AWS",
                                                                ].map((skill) => (_jsx(Badge, { variant: "outline", className: "border-blue-200 text-blue-700 bg-blue-50", children: skill }, skill))) })] }), _jsxs("div", { children: [_jsx("h3", { className: "font-semibold text-gray-900 mb-2", children: "Company Overview" }), _jsx("p", { className: "text-gray-600 leading-relaxed", children: "TechCorp Solutions is a leading technology company specializing in innovative software solutions for businesses worldwide. We pride ourselves on fostering a collaborative environment where creativity and technical excellence thrive." })] }), _jsxs("div", { children: [_jsx("h3", { className: "font-semibold text-gray-900 mb-2", children: "Benefits & Perks" }), _jsxs("ul", { className: "text-gray-600 space-y-1", children: [_jsxs("li", { children: [_jsx("i", { className: "fas fa-check text-green-600 mr-2" }), "Competitive salary and equity package"] }), _jsxs("li", { children: [_jsx("i", { className: "fas fa-check text-green-600 mr-2" }), "Comprehensive health, dental, and vision insurance"] }), _jsxs("li", { children: [_jsx("i", { className: "fas fa-check text-green-600 mr-2" }), "Flexible work arrangements and remote options"] }), _jsxs("li", { children: [_jsx("i", { className: "fas fa-check text-green-600 mr-2" }), "Professional development budget"] }), _jsxs("li", { children: [_jsx("i", { className: "fas fa-check text-green-600 mr-2" }), "Modern tech stack and equipment"] })] })] })] }) }) })] }) }), _jsxs(Card, { className: "bg-white border-gray-200", children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "text-2xl font-bold text-gray-900", children: [_jsx("i", { className: "fas fa-file-alt mr-2 text-blue-600" }), "Submit Your Application"] }), _jsx(CardDescription, { className: "text-gray-600", children: "Please fill out all required fields to complete your application for this position." })] }), _jsx(CardContent, { children: _jsxs("form", { onSubmit: handleSubmit, className: "space-y-8", children: [_jsxs("div", { className: "space-y-6", children: [_jsxs("h3", { className: "text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2", children: [_jsx("i", { className: "fas fa-user mr-2 text-blue-600" }), "Personal Information"] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "fullName", className: "text-sm font-medium text-gray-700", children: ["Full Name ", _jsx("span", { className: "text-red-500", children: "*" })] }), _jsx(Input, { id: "fullName", type: "text", placeholder: "Enter your full name", value: formData.fullName, onChange: (e) => handleInputChange("fullName", e.target.value), required: true, className: "border-gray-300 focus:border-blue-500 focus:ring-blue-500" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "email", className: "text-sm font-medium text-gray-700", children: ["Email Address ", _jsx("span", { className: "text-red-500", children: "*" })] }), _jsx(Input, { id: "email", type: "email", placeholder: "your.email@example.com", value: formData.email, onChange: (e) => handleInputChange("email", e.target.value), required: true, className: "border-gray-300 focus:border-blue-500 focus:ring-blue-500" })] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "phone", className: "text-sm font-medium text-gray-700", children: ["Phone Number ", _jsx("span", { className: "text-red-500", children: "*" })] }), _jsx(Input, { id: "phone", type: "tel", placeholder: "+1 (555) 123-4567", value: formData.phone, onChange: (e) => handleInputChange("phone", e.target.value), required: true, className: "border-gray-300 focus:border-blue-500 focus:ring-blue-500" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "location", className: "text-sm font-medium text-gray-700", children: ["Current Location ", _jsx("span", { className: "text-red-500", children: "*" })] }), _jsx(Input, { id: "location", type: "text", placeholder: "City, State/Country", value: formData.location, onChange: (e) => handleInputChange("location", e.target.value), required: true, className: "border-gray-300 focus:border-blue-500 focus:ring-blue-500" })] })] })] }), _jsxs("div", { className: "space-y-6", children: [_jsxs("h3", { className: "text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2", children: [_jsx("i", { className: "fas fa-briefcase mr-2 text-blue-600" }), "Professional Information"] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { className: "text-sm font-medium text-gray-700", children: ["Resume Upload ", _jsx("span", { className: "text-red-500", children: "*" })] }), _jsx("div", { className: `border-2 border-dashed rounded-lg p-8 text-center transition-colors ${dragActive
                                                                    ? "border-blue-500 bg-blue-50"
                                                                    : uploadedFile
                                                                        ? "border-green-500 bg-green-50"
                                                                        : "border-gray-300 hover:border-gray-400"}`, onDragEnter: handleDrag, onDragLeave: handleDrag, onDragOver: handleDrag, onDrop: handleDrop, children: uploadedFile ? (_jsxs("div", { className: "space-y-2", children: [_jsx("i", { className: "fas fa-file-pdf text-3xl text-green-600" }), _jsx("p", { className: "text-sm font-medium text-green-700", children: uploadedFile.name }), _jsx("p", { className: "text-xs text-green-600", children: "File uploaded successfully" }), _jsx(Button, { type: "button", variant: "outline", size: "sm", onClick: () => setUploadedFile(null), className: "!rounded-button whitespace-nowrap cursor-pointer mt-2", children: "Remove File" })] })) : (_jsxs("div", { className: "space-y-2", children: [_jsx("i", { className: "fas fa-cloud-upload-alt text-3xl text-gray-400" }), _jsxs("p", { className: "text-sm text-gray-600", children: ["Drag and drop your resume here, or", " ", _jsxs("label", { className: "text-blue-600 hover:text-blue-700 cursor-pointer underline", children: ["browse files", _jsx("input", { type: "file", accept: ".pdf", onChange: handleFileUpload, className: "hidden" })] })] }), _jsx("p", { className: "text-xs text-gray-500", children: "PDF files only, max 10MB" })] })) })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "linkedinUrl", className: "text-sm font-medium text-gray-700", children: "LinkedIn Profile URL" }), _jsx(Input, { id: "linkedinUrl", type: "url", placeholder: "https://linkedin.com/in/yourprofile", value: formData.linkedinUrl, onChange: (e) => handleInputChange("linkedinUrl", e.target.value), className: "border-gray-300 focus:border-blue-500 focus:ring-blue-500" })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(Label, { htmlFor: "portfolioUrl", className: "text-sm font-medium text-gray-700", children: "Portfolio/GitHub URL" }), _jsx(Input, { id: "portfolioUrl", type: "url", placeholder: "https://github.com/yourusername", value: formData.portfolioUrl, onChange: (e) => handleInputChange("portfolioUrl", e.target.value), className: "border-gray-300 focus:border-blue-500 focus:ring-blue-500" })] })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "yearsExperience", className: "text-sm font-medium text-gray-700", children: ["Years of Experience", " ", _jsx("span", { className: "text-red-500", children: "*" })] }), _jsx(Input, { id: "yearsExperience", type: "number", min: "0", max: "50", placeholder: "5", value: formData.yearsExperience, onChange: (e) => handleInputChange("yearsExperience", e.target.value), required: true, className: "border-gray-300 focus:border-blue-500 focus:ring-blue-500 w-full md:w-48" })] })] }), _jsxs("div", { className: "space-y-6", children: [_jsxs("h3", { className: "text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2", children: [_jsx("i", { className: "fas fa-envelope mr-2 text-blue-600" }), "Cover Letter"] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "coverLetter", className: "text-sm font-medium text-gray-700", children: ["Cover Letter ", _jsx("span", { className: "text-red-500", children: "*" })] }), _jsx(Textarea, { id: "coverLetter", placeholder: "Tell us why you're the perfect fit for this role. Highlight your relevant experience, achievements, and what excites you about this opportunity...", value: formData.coverLetter, onChange: (e) => handleInputChange("coverLetter", e.target.value), required: true, rows: 6, maxLength: maxCoverLetterLength, className: "border-gray-300 focus:border-blue-500 focus:ring-blue-500 resize-none" }), _jsxs("div", { className: "flex justify-between text-xs text-gray-500", children: [_jsx("span", { children: "Minimum 100 characters required" }), _jsxs("span", { className: coverLetterCount > maxCoverLetterLength * 0.9
                                                                            ? "text-orange-600"
                                                                            : "", children: [coverLetterCount, "/", maxCoverLetterLength] })] })] })] }), _jsxs("div", { className: "space-y-6", children: [_jsxs("h3", { className: "text-lg font-semibold text-gray-900 border-b border-gray-200 pb-2", children: [_jsx("i", { className: "fas fa-question-circle mr-2 text-blue-600" }), "Experience Questions"] }), _jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "reactNodeExperience", className: "text-sm font-medium text-gray-700", children: ["Describe your experience with React and Node.js", " ", _jsx("span", { className: "text-red-500", children: "*" })] }), _jsx(Textarea, { id: "reactNodeExperience", placeholder: "Share specific projects, technologies, and achievements using React and Node.js...", value: formData.reactNodeExperience, onChange: (e) => handleInputChange("reactNodeExperience", e.target.value), required: true, rows: 4, className: "border-gray-300 focus:border-blue-500 focus:ring-blue-500 resize-none" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "largestProject", className: "text-sm font-medium text-gray-700", children: ["What is your largest project to date?", " ", _jsx("span", { className: "text-red-500", children: "*" })] }), _jsx(Textarea, { id: "largestProject", placeholder: "Describe the scope, technologies used, your role, and the impact of your largest project...", value: formData.largestProject, onChange: (e) => handleInputChange("largestProject", e.target.value), required: true, rows: 4, className: "border-gray-300 focus:border-blue-500 focus:ring-blue-500 resize-none" })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs(Label, { htmlFor: "whyInterested", className: "text-sm font-medium text-gray-700", children: ["Why are you interested in this position?", " ", _jsx("span", { className: "text-red-500", children: "*" })] }), _jsx(Textarea, { id: "whyInterested", placeholder: "Explain what attracts you to this role and TechCorp Solutions, and how it aligns with your career goals...", value: formData.whyInterested, onChange: (e) => handleInputChange("whyInterested", e.target.value), required: true, rows: 4, className: "border-gray-300 focus:border-blue-500 focus:ring-blue-500 resize-none" })] })] })] }), _jsxs("div", { className: "space-y-6 pt-6 border-t border-gray-200", children: [_jsxs("div", { className: "flex items-start space-x-2", children: [_jsx(Checkbox, { id: "terms", checked: formData.termsAccepted, onCheckedChange: (checked) => handleInputChange("termsAccepted", checked), required: true, className: "mt-1" }), _jsxs(Label, { htmlFor: "terms", className: "text-sm text-gray-600 leading-relaxed cursor-pointer", children: ["I agree to the", " ", _jsx("a", { href: "#", className: "text-blue-600 hover:text-blue-700 underline", children: "Privacy Policy" }), " ", "and", " ", _jsx("a", { href: "#", className: "text-blue-600 hover:text-blue-700 underline", children: "Terms of Service" }), ", and consent to the processing of my personal data for recruitment purposes."] })] }), _jsxs("div", { className: "flex flex-col sm:flex-row gap-4 items-center", children: [_jsx(Button, { type: "submit", disabled: isSubmitting || !formData.termsAccepted, className: "w-full sm:w-auto bg-blue-600 hover:bg-blue-700 text-white !rounded-button whitespace-nowrap cursor-pointer px-8 py-3 text-base font-medium", children: isSubmitting ? (_jsxs(_Fragment, { children: [_jsx("i", { className: "fas fa-spinner fa-spin mr-2" }), "Submitting Application..."] })) : (_jsxs(_Fragment, { children: [_jsx("i", { className: "fas fa-paper-plane mr-2" }), "Submit Application"] })) }), _jsxs("p", { className: "text-sm text-gray-500 text-center sm:text-left", children: [_jsx("span", { className: "text-red-500", children: "*" }), " indicates required fields"] })] })] })] }) })] })] }), _jsx("footer", { className: "bg-white border-t border-gray-200 mt-16", children: _jsx("div", { className: "px-6 py-8", children: _jsxs("div", { className: "flex flex-col md:flex-row justify-between items-center", children: [_jsx("p", { className: "text-sm text-gray-600", children: "\u00A9 2024 JobBoard Pro. All rights reserved." }), _jsxs("div", { className: "flex space-x-6 mt-4 md:mt-0", children: [_jsx("a", { href: "#", className: "text-sm text-gray-600 hover:text-gray-900 hover:underline", children: "Privacy Policy" }), _jsx("a", { href: "#", className: "text-sm text-gray-600 hover:text-gray-900 hover:underline", children: "Terms of Service" }), _jsx("a", { href: "#", className: "text-sm text-gray-600 hover:text-gray-900 hover:underline", children: "Contact Us" })] })] }) }) })] }) }));
};
export default JobApplyPage;
